name: "Determine next tag from PR body"
description: "Determine next tag from PR body"

inputs:
  PR_BODY:
    description: |
      Body of pull request if inside a pull request
    required: false
    # default: ""

  PR_NUMBER:
    description: |
      Pull request number
    required: false
    # default: ""

# Expose step outputs as job outputs
outputs:
  new_tag:
    description: "Next tag version"
    value: ${{ steps.determine_next_tag.outputs.new_tag }}

runs:
  using: "composite"

  steps:
    - name: Set GitHub Path
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH

    - uses: actions/checkout@v4
    - uses: fregante/setup-git-user@v2

    - name: Determine new tag version from PR event
      if: ${{ inputs.pr_body != '' && inputs.pr_number != '' }}
      shell: sh
      id: determine_next_tag_from_pr_event
      # User controlled input needs to be santitised beforehand e.g., by adding an
      # intermediate env var to prevent the workflow being exposed to a critical
      # command injection attack
      env:
        PR_BODY: "${{ inputs.pr_body }}"
        PR_NUMBER: "${{ inputs.pr_number }}"
      run: |
        echo "Determining whether user has selected an auto-tag option..."
        script_output=$("${{ github.action_path }}/auto-tag.sh" "${PR_BODY}" "${PR_NUMBER}")
        if $? != 0; then
          exit 1
        fi
        new_tag=$(echo "${script_output}" | tail -n 1)
        echo "New tag: ${new_tag}"
        echo "new_tag=${new_tag}"  >> "$GITHUB_OUTPUT"

    - uses: actions/github-script@v7
      if: ${{ (inputs.pr_body == '' && inputs.pr_number == '') }}
      id: get_pr_data
      with:
        script: |
          return (
            await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
          ).data[0];

    - name: Determine new tag version
      if: ${{ (inputs.pr_body == '' && inputs.pr_number == '') && steps.get_pr_data.outputs.result && (fromJSON(steps.get_pr_data.outputs.result).number && fromJSON(steps.get_pr_data.outputs.result).body) }}
      shell: sh
      id: determine_next_tag_retrospectively
      run: |
        echo "Attempting to auto-tag merge commit"
        script_output=$("${{ github.action_path }}/auto-tag.sh" "${{ fromJson(steps.get_pr_data.outputs.result).body }}" "${{ fromJson(steps.get_pr_data.outputs.result).number }}")
        if $? != 0; then
          exit 1
        fi
        new_tag=$(echo "${script_output}" | tail -n 1)
        echo "New tag: ${new_tag}"
        echo "new_tag=${new_tag}"  >> "$GITHUB_OUTPUT"

    - name: Set new_tag
      shell: bash
      id: determine_next_tag
      run: |
        if [[ "${{ (inputs.pr_body != '' && inputs.pr_number != '') }}" ]]; then
            echo "new_tag=${{ steps.determine_next_tag_from_pr_event.outputs.new_tag }}"  >> "$GITHUB_OUTPUT"
        elif [[ "${{ (inputs.pr_body == '' && inputs.pr_number == '') }}" ]]; then
            echo "new_tag=${{ steps.determine_next_tag_retrospectively.outputs.new_tag }}"  >> "$GITHUB_OUTPUT"
        fi
